#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Pharmacy_Management_System
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="PharmacyDatabase")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertcategory(category instance);
    partial void Updatecategory(category instance);
    partial void Deletecategory(category instance);
    partial void Insertcustomer(customer instance);
    partial void Updatecustomer(customer instance);
    partial void Deletecustomer(customer instance);
    partial void InsertLoginTable(LoginTable instance);
    partial void UpdateLoginTable(LoginTable instance);
    partial void DeleteLoginTable(LoginTable instance);
    partial void InsertProduct(Product instance);
    partial void UpdateProduct(Product instance);
    partial void DeleteProduct(Product instance);
    partial void Insertpurchase(purchase instance);
    partial void Updatepurchase(purchase instance);
    partial void Deletepurchase(purchase instance);
    partial void Insertsale(sale instance);
    partial void Updatesale(sale instance);
    partial void Deletesale(sale instance);
    partial void Insertsupplier(supplier instance);
    partial void Updatesupplier(supplier instance);
    partial void Deletesupplier(supplier instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Pharmacy_Management_System.Properties.Settings.Default.PharmacyDatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<category> categories
		{
			get
			{
				return this.GetTable<category>();
			}
		}
		
		public System.Data.Linq.Table<customer> customers
		{
			get
			{
				return this.GetTable<customer>();
			}
		}
		
		public System.Data.Linq.Table<LoginTable> LoginTables
		{
			get
			{
				return this.GetTable<LoginTable>();
			}
		}
		
		public System.Data.Linq.Table<Product> Products
		{
			get
			{
				return this.GetTable<Product>();
			}
		}
		
		public System.Data.Linq.Table<purchase> purchases
		{
			get
			{
				return this.GetTable<purchase>();
			}
		}
		
		public System.Data.Linq.Table<sale> sales
		{
			get
			{
				return this.GetTable<sale>();
			}
		}
		
		public System.Data.Linq.Table<supplier> suppliers
		{
			get
			{
				return this.GetTable<supplier>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.category")]
	public partial class category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _catId;
		
		private string _catName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncatIdChanging(int value);
    partial void OncatIdChanged();
    partial void OncatNameChanging(string value);
    partial void OncatNameChanged();
    #endregion
		
		public category()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int catId
		{
			get
			{
				return this._catId;
			}
			set
			{
				if ((this._catId != value))
				{
					this.OncatIdChanging(value);
					this.SendPropertyChanging();
					this._catId = value;
					this.SendPropertyChanged("catId");
					this.OncatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catName", DbType="NVarChar(30)")]
		public string catName
		{
			get
			{
				return this._catName;
			}
			set
			{
				if ((this._catName != value))
				{
					this.OncatNameChanging(value);
					this.SendPropertyChanging();
					this._catName = value;
					this.SendPropertyChanged("catName");
					this.OncatNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.customer")]
	public partial class customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cid;
		
		private string _cname;
		
		private string _address;
		
		private string _phoneNo;
		
		private EntitySet<sale> _sales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncidChanging(int value);
    partial void OncidChanged();
    partial void OncnameChanging(string value);
    partial void OncnameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneNoChanging(string value);
    partial void OnphoneNoChanged();
    #endregion
		
		public customer()
		{
			this._sales = new EntitySet<sale>(new Action<sale>(this.attach_sales), new Action<sale>(this.detach_sales));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cid
		{
			get
			{
				return this._cid;
			}
			set
			{
				if ((this._cid != value))
				{
					this.OncidChanging(value);
					this.SendPropertyChanging();
					this._cid = value;
					this.SendPropertyChanged("cid");
					this.OncidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cname", DbType="NVarChar(40)")]
		public string cname
		{
			get
			{
				return this._cname;
			}
			set
			{
				if ((this._cname != value))
				{
					this.OncnameChanging(value);
					this.SendPropertyChanging();
					this._cname = value;
					this.SendPropertyChanged("cname");
					this.OncnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(40)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phoneNo", DbType="NVarChar(20)")]
		public string phoneNo
		{
			get
			{
				return this._phoneNo;
			}
			set
			{
				if ((this._phoneNo != value))
				{
					this.OnphoneNoChanging(value);
					this.SendPropertyChanging();
					this._phoneNo = value;
					this.SendPropertyChanged("phoneNo");
					this.OnphoneNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_sale", Storage="_sales", ThisKey="cid", OtherKey="customerId")]
		public EntitySet<sale> sales
		{
			get
			{
				return this._sales;
			}
			set
			{
				this._sales.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_sales(sale entity)
		{
			this.SendPropertyChanging();
			entity.customer = this;
		}
		
		private void detach_sales(sale entity)
		{
			this.SendPropertyChanging();
			entity.customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginTable")]
	public partial class LoginTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _userId;
		
		private string _userName;
		
		private string _userPassword;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnuserIdChanging(int value);
    partial void OnuserIdChanged();
    partial void OnuserNameChanging(string value);
    partial void OnuserNameChanged();
    partial void OnuserPasswordChanging(string value);
    partial void OnuserPasswordChanged();
    #endregion
		
		public LoginTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userName", DbType="NVarChar(30)")]
		public string userName
		{
			get
			{
				return this._userName;
			}
			set
			{
				if ((this._userName != value))
				{
					this.OnuserNameChanging(value);
					this.SendPropertyChanging();
					this._userName = value;
					this.SendPropertyChanged("userName");
					this.OnuserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userPassword", DbType="NVarChar(20)")]
		public string userPassword
		{
			get
			{
				return this._userPassword;
			}
			set
			{
				if ((this._userPassword != value))
				{
					this.OnuserPasswordChanging(value);
					this.SendPropertyChanging();
					this._userPassword = value;
					this.SendPropertyChanged("userPassword");
					this.OnuserPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Product")]
	public partial class Product : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _pid;
		
		private string _pname;
		
		private string _ptype;
		
		private System.Nullable<int> _sale_rate;
		
		private System.Nullable<int> _purchase_rate;
		
		private System.Nullable<int> _quantity;
		
		private System.Nullable<System.DateTime> _expiryDate;
		
		private string _company;
		
		private string _generic;
		
		private string _batchNo;
		
		private string _packSize;
		
		private string _location;
		
		private EntitySet<purchase> _purchases;
		
		private EntitySet<sale> _sales;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpidChanging(int value);
    partial void OnpidChanged();
    partial void OnpnameChanging(string value);
    partial void OnpnameChanged();
    partial void OnptypeChanging(string value);
    partial void OnptypeChanged();
    partial void Onsale_rateChanging(System.Nullable<int> value);
    partial void Onsale_rateChanged();
    partial void Onpurchase_rateChanging(System.Nullable<int> value);
    partial void Onpurchase_rateChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    partial void OnexpiryDateChanging(System.Nullable<System.DateTime> value);
    partial void OnexpiryDateChanged();
    partial void OncompanyChanging(string value);
    partial void OncompanyChanged();
    partial void OngenericChanging(string value);
    partial void OngenericChanged();
    partial void OnbatchNoChanging(string value);
    partial void OnbatchNoChanged();
    partial void OnpackSizeChanging(string value);
    partial void OnpackSizeChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    #endregion
		
		public Product()
		{
			this._purchases = new EntitySet<purchase>(new Action<purchase>(this.attach_purchases), new Action<purchase>(this.detach_purchases));
			this._sales = new EntitySet<sale>(new Action<sale>(this.attach_sales), new Action<sale>(this.detach_sales));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int pid
		{
			get
			{
				return this._pid;
			}
			set
			{
				if ((this._pid != value))
				{
					this.OnpidChanging(value);
					this.SendPropertyChanging();
					this._pid = value;
					this.SendPropertyChanged("pid");
					this.OnpidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pname", DbType="NVarChar(50)")]
		public string pname
		{
			get
			{
				return this._pname;
			}
			set
			{
				if ((this._pname != value))
				{
					this.OnpnameChanging(value);
					this.SendPropertyChanging();
					this._pname = value;
					this.SendPropertyChanged("pname");
					this.OnpnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ptype", DbType="NVarChar(20)")]
		public string ptype
		{
			get
			{
				return this._ptype;
			}
			set
			{
				if ((this._ptype != value))
				{
					this.OnptypeChanging(value);
					this.SendPropertyChanging();
					this._ptype = value;
					this.SendPropertyChanged("ptype");
					this.OnptypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sale_rate", DbType="Int")]
		public System.Nullable<int> sale_rate
		{
			get
			{
				return this._sale_rate;
			}
			set
			{
				if ((this._sale_rate != value))
				{
					this.Onsale_rateChanging(value);
					this.SendPropertyChanging();
					this._sale_rate = value;
					this.SendPropertyChanged("sale_rate");
					this.Onsale_rateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchase_rate", DbType="Int")]
		public System.Nullable<int> purchase_rate
		{
			get
			{
				return this._purchase_rate;
			}
			set
			{
				if ((this._purchase_rate != value))
				{
					this.Onpurchase_rateChanging(value);
					this.SendPropertyChanging();
					this._purchase_rate = value;
					this.SendPropertyChanged("purchase_rate");
					this.Onpurchase_rateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiryDate", DbType="Date")]
		public System.Nullable<System.DateTime> expiryDate
		{
			get
			{
				return this._expiryDate;
			}
			set
			{
				if ((this._expiryDate != value))
				{
					this.OnexpiryDateChanging(value);
					this.SendPropertyChanging();
					this._expiryDate = value;
					this.SendPropertyChanged("expiryDate");
					this.OnexpiryDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_company", DbType="NVarChar(30)")]
		public string company
		{
			get
			{
				return this._company;
			}
			set
			{
				if ((this._company != value))
				{
					this.OncompanyChanging(value);
					this.SendPropertyChanging();
					this._company = value;
					this.SendPropertyChanged("company");
					this.OncompanyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_generic", DbType="NVarChar(30)")]
		public string generic
		{
			get
			{
				return this._generic;
			}
			set
			{
				if ((this._generic != value))
				{
					this.OngenericChanging(value);
					this.SendPropertyChanging();
					this._generic = value;
					this.SendPropertyChanged("generic");
					this.OngenericChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_batchNo", DbType="NVarChar(20)")]
		public string batchNo
		{
			get
			{
				return this._batchNo;
			}
			set
			{
				if ((this._batchNo != value))
				{
					this.OnbatchNoChanging(value);
					this.SendPropertyChanging();
					this._batchNo = value;
					this.SendPropertyChanged("batchNo");
					this.OnbatchNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_packSize", DbType="NVarChar(20)")]
		public string packSize
		{
			get
			{
				return this._packSize;
			}
			set
			{
				if ((this._packSize != value))
				{
					this.OnpackSizeChanging(value);
					this.SendPropertyChanging();
					this._packSize = value;
					this.SendPropertyChanged("packSize");
					this.OnpackSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="NVarChar(20)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_purchase", Storage="_purchases", ThisKey="pid", OtherKey="productId")]
		public EntitySet<purchase> purchases
		{
			get
			{
				return this._purchases;
			}
			set
			{
				this._purchases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_sale", Storage="_sales", ThisKey="pid", OtherKey="productId")]
		public EntitySet<sale> sales
		{
			get
			{
				return this._sales;
			}
			set
			{
				this._sales.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_purchases(purchase entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_purchases(purchase entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
		
		private void attach_sales(sale entity)
		{
			this.SendPropertyChanging();
			entity.Product = this;
		}
		
		private void detach_sales(sale entity)
		{
			this.SendPropertyChanging();
			entity.Product = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.purchase")]
	public partial class purchase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _purId;
		
		private System.Nullable<int> _productId;
		
		private System.Nullable<int> _supplierId;
		
		private System.Nullable<System.DateTime> _purchaseDate;
		
		private System.Nullable<int> _productQuantity;
		
		private System.Nullable<int> _total;
		
		private EntityRef<Product> _Product;
		
		private EntityRef<supplier> _supplier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpurIdChanging(int value);
    partial void OnpurIdChanged();
    partial void OnproductIdChanging(System.Nullable<int> value);
    partial void OnproductIdChanged();
    partial void OnsupplierIdChanging(System.Nullable<int> value);
    partial void OnsupplierIdChanged();
    partial void OnpurchaseDateChanging(System.Nullable<System.DateTime> value);
    partial void OnpurchaseDateChanged();
    partial void OnproductQuantityChanging(System.Nullable<int> value);
    partial void OnproductQuantityChanged();
    partial void OntotalChanging(System.Nullable<int> value);
    partial void OntotalChanged();
    #endregion
		
		public purchase()
		{
			this._Product = default(EntityRef<Product>);
			this._supplier = default(EntityRef<supplier>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int purId
		{
			get
			{
				return this._purId;
			}
			set
			{
				if ((this._purId != value))
				{
					this.OnpurIdChanging(value);
					this.SendPropertyChanging();
					this._purId = value;
					this.SendPropertyChanged("purId");
					this.OnpurIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int")]
		public System.Nullable<int> productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_supplierId", DbType="Int")]
		public System.Nullable<int> supplierId
		{
			get
			{
				return this._supplierId;
			}
			set
			{
				if ((this._supplierId != value))
				{
					if (this._supplier.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnsupplierIdChanging(value);
					this.SendPropertyChanging();
					this._supplierId = value;
					this.SendPropertyChanged("supplierId");
					this.OnsupplierIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purchaseDate", DbType="Date")]
		public System.Nullable<System.DateTime> purchaseDate
		{
			get
			{
				return this._purchaseDate;
			}
			set
			{
				if ((this._purchaseDate != value))
				{
					this.OnpurchaseDateChanging(value);
					this.SendPropertyChanging();
					this._purchaseDate = value;
					this.SendPropertyChanged("purchaseDate");
					this.OnpurchaseDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productQuantity", DbType="Int")]
		public System.Nullable<int> productQuantity
		{
			get
			{
				return this._productQuantity;
			}
			set
			{
				if ((this._productQuantity != value))
				{
					this.OnproductQuantityChanging(value);
					this.SendPropertyChanging();
					this._productQuantity = value;
					this.SendPropertyChanged("productQuantity");
					this.OnproductQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Int")]
		public System.Nullable<int> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_purchase", Storage="_Product", ThisKey="productId", OtherKey="pid", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.purchases.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.purchases.Add(this);
						this._productId = value.pid;
					}
					else
					{
						this._productId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_purchase", Storage="_supplier", ThisKey="supplierId", OtherKey="spId", IsForeignKey=true)]
		public supplier supplier
		{
			get
			{
				return this._supplier.Entity;
			}
			set
			{
				supplier previousValue = this._supplier.Entity;
				if (((previousValue != value) 
							|| (this._supplier.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._supplier.Entity = null;
						previousValue.purchases.Remove(this);
					}
					this._supplier.Entity = value;
					if ((value != null))
					{
						value.purchases.Add(this);
						this._supplierId = value.spId;
					}
					else
					{
						this._supplierId = default(Nullable<int>);
					}
					this.SendPropertyChanged("supplier");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.sale")]
	public partial class sale : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sid;
		
		private System.Nullable<int> _productId;
		
		private System.Nullable<int> _customerId;
		
		private System.Nullable<System.DateTime> _saleDate;
		
		private System.Nullable<int> _productQuantity;
		
		private System.Nullable<int> _total;
		
		private EntityRef<customer> _customer;
		
		private EntityRef<Product> _Product;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsidChanging(int value);
    partial void OnsidChanged();
    partial void OnproductIdChanging(System.Nullable<int> value);
    partial void OnproductIdChanged();
    partial void OncustomerIdChanging(System.Nullable<int> value);
    partial void OncustomerIdChanged();
    partial void OnsaleDateChanging(System.Nullable<System.DateTime> value);
    partial void OnsaleDateChanged();
    partial void OnproductQuantityChanging(System.Nullable<int> value);
    partial void OnproductQuantityChanged();
    partial void OntotalChanging(System.Nullable<int> value);
    partial void OntotalChanged();
    #endregion
		
		public sale()
		{
			this._customer = default(EntityRef<customer>);
			this._Product = default(EntityRef<Product>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sid
		{
			get
			{
				return this._sid;
			}
			set
			{
				if ((this._sid != value))
				{
					this.OnsidChanging(value);
					this.SendPropertyChanging();
					this._sid = value;
					this.SendPropertyChanged("sid");
					this.OnsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productId", DbType="Int")]
		public System.Nullable<int> productId
		{
			get
			{
				return this._productId;
			}
			set
			{
				if ((this._productId != value))
				{
					if (this._Product.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnproductIdChanging(value);
					this.SendPropertyChanging();
					this._productId = value;
					this.SendPropertyChanged("productId");
					this.OnproductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_customerId", DbType="Int")]
		public System.Nullable<int> customerId
		{
			get
			{
				return this._customerId;
			}
			set
			{
				if ((this._customerId != value))
				{
					if (this._customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncustomerIdChanging(value);
					this.SendPropertyChanging();
					this._customerId = value;
					this.SendPropertyChanged("customerId");
					this.OncustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_saleDate", DbType="Date")]
		public System.Nullable<System.DateTime> saleDate
		{
			get
			{
				return this._saleDate;
			}
			set
			{
				if ((this._saleDate != value))
				{
					this.OnsaleDateChanging(value);
					this.SendPropertyChanging();
					this._saleDate = value;
					this.SendPropertyChanged("saleDate");
					this.OnsaleDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_productQuantity", DbType="Int")]
		public System.Nullable<int> productQuantity
		{
			get
			{
				return this._productQuantity;
			}
			set
			{
				if ((this._productQuantity != value))
				{
					this.OnproductQuantityChanging(value);
					this.SendPropertyChanging();
					this._productQuantity = value;
					this.SendPropertyChanged("productQuantity");
					this.OnproductQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Int")]
		public System.Nullable<int> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="customer_sale", Storage="_customer", ThisKey="customerId", OtherKey="cid", IsForeignKey=true)]
		public customer customer
		{
			get
			{
				return this._customer.Entity;
			}
			set
			{
				customer previousValue = this._customer.Entity;
				if (((previousValue != value) 
							|| (this._customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._customer.Entity = null;
						previousValue.sales.Remove(this);
					}
					this._customer.Entity = value;
					if ((value != null))
					{
						value.sales.Add(this);
						this._customerId = value.cid;
					}
					else
					{
						this._customerId = default(Nullable<int>);
					}
					this.SendPropertyChanged("customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Product_sale", Storage="_Product", ThisKey="productId", OtherKey="pid", IsForeignKey=true)]
		public Product Product
		{
			get
			{
				return this._Product.Entity;
			}
			set
			{
				Product previousValue = this._Product.Entity;
				if (((previousValue != value) 
							|| (this._Product.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Product.Entity = null;
						previousValue.sales.Remove(this);
					}
					this._Product.Entity = value;
					if ((value != null))
					{
						value.sales.Add(this);
						this._productId = value.pid;
					}
					else
					{
						this._productId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Product");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.supplier")]
	public partial class supplier : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _spId;
		
		private string _spName;
		
		private string _spAddress;
		
		private string _spPhone;
		
		private EntitySet<purchase> _purchases;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnspIdChanging(int value);
    partial void OnspIdChanged();
    partial void OnspNameChanging(string value);
    partial void OnspNameChanged();
    partial void OnspAddressChanging(string value);
    partial void OnspAddressChanged();
    partial void OnspPhoneChanging(string value);
    partial void OnspPhoneChanged();
    #endregion
		
		public supplier()
		{
			this._purchases = new EntitySet<purchase>(new Action<purchase>(this.attach_purchases), new Action<purchase>(this.detach_purchases));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int spId
		{
			get
			{
				return this._spId;
			}
			set
			{
				if ((this._spId != value))
				{
					this.OnspIdChanging(value);
					this.SendPropertyChanging();
					this._spId = value;
					this.SendPropertyChanged("spId");
					this.OnspIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spName", DbType="NVarChar(30)")]
		public string spName
		{
			get
			{
				return this._spName;
			}
			set
			{
				if ((this._spName != value))
				{
					this.OnspNameChanging(value);
					this.SendPropertyChanging();
					this._spName = value;
					this.SendPropertyChanged("spName");
					this.OnspNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spAddress", DbType="NVarChar(40)")]
		public string spAddress
		{
			get
			{
				return this._spAddress;
			}
			set
			{
				if ((this._spAddress != value))
				{
					this.OnspAddressChanging(value);
					this.SendPropertyChanging();
					this._spAddress = value;
					this.SendPropertyChanged("spAddress");
					this.OnspAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spPhone", DbType="NVarChar(15)")]
		public string spPhone
		{
			get
			{
				return this._spPhone;
			}
			set
			{
				if ((this._spPhone != value))
				{
					this.OnspPhoneChanging(value);
					this.SendPropertyChanging();
					this._spPhone = value;
					this.SendPropertyChanged("spPhone");
					this.OnspPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="supplier_purchase", Storage="_purchases", ThisKey="spId", OtherKey="supplierId")]
		public EntitySet<purchase> purchases
		{
			get
			{
				return this._purchases;
			}
			set
			{
				this._purchases.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_purchases(purchase entity)
		{
			this.SendPropertyChanging();
			entity.supplier = this;
		}
		
		private void detach_purchases(purchase entity)
		{
			this.SendPropertyChanging();
			entity.supplier = null;
		}
	}
}
#pragma warning restore 1591
